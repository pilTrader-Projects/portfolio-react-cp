{"ast":null,"code":"import _slicedToArray from\"D:\\\\Bong\\\\Documents\\\\Projects\\\\ReactJS\\\\Portfolio\\\\portfolio-react-cp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,createRef}from\"react\";import\"./ExperienceCard.css\";import ColorThief from\"colorthief\";export default function ExperienceCard(_ref){var cardInfo=_ref.cardInfo,isDark=_ref.isDark;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),colorArrays=_useState2[0],setColorArrays=_useState2[1];var imgRef=createRef();function getColorArrays(){var colorThief=new ColorThief();setColorArrays(colorThief.getColor(imgRef.current));}function rgb(values){return typeof values===\"undefined\"?null:\"rgb(\"+values.join(\", \")+\")\";}var GetDescBullets=function GetDescBullets(_ref2){var descBullets=_ref2.descBullets,isDark=_ref2.isDark;return descBullets?descBullets.map(function(item,i){return/*#__PURE__*/React.createElement(\"li\",{key:i,className:isDark?\"subTitle dark-mode-text\":\"subTitle\"},item);}):null;};return/*#__PURE__*/React.createElement(\"div\",{className:isDark?\"experience-card-dark\":\"experience-card\"},/*#__PURE__*/React.createElement(\"div\",{style:{background:rgb(colorArrays)},className:\"experience-banner\"},/*#__PURE__*/React.createElement(\"div\",{className:\"experience-blurred_div\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"experience-div-company\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"experience-text-company\"},cardInfo.company)),/*#__PURE__*/React.createElement(\"img\",{crossOrigin:\"anonymous\",ref:imgRef,className:\"experience-roundedimg\",src:cardInfo.companylogo,alt:cardInfo.company,onLoad:function onLoad(){return getColorArrays();}})),/*#__PURE__*/React.createElement(\"div\",{className:\"experience-text-details\"},/*#__PURE__*/React.createElement(\"h5\",{className:isDark?\"experience-text-role dark-mode-text\":\"experience-text-role\"},cardInfo.role),/*#__PURE__*/React.createElement(\"h5\",{className:isDark?\"experience-text-date dark-mode-text\":\"experience-text-date\"},cardInfo.date),/*#__PURE__*/React.createElement(\"p\",{className:isDark?\"subTitle experience-text-desc dark-mode-text\":\"subTitle experience-text-desc\"},cardInfo.desc),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(GetDescBullets,{descBullets:cardInfo.descBullets,isDark:isDark}))));}","map":{"version":3,"sources":["D:/Bong/Documents/Projects/ReactJS/Portfolio/portfolio-react-cp/src/components/experienceCard/ExperienceCard.js"],"names":["React","useState","createRef","ColorThief","ExperienceCard","cardInfo","isDark","colorArrays","setColorArrays","imgRef","getColorArrays","colorThief","getColor","current","rgb","values","join","GetDescBullets","descBullets","map","item","i","background","company","companylogo","role","date","desc"],"mappings":"iMAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAO,sBAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,cAAe,SAASC,CAAAA,cAAT,MAA4C,IAAnBC,CAAAA,QAAmB,MAAnBA,QAAmB,CAATC,MAAS,MAATA,MAAS,eACnBL,QAAQ,CAAC,EAAD,CADW,wCAClDM,WADkD,eACrCC,cADqC,eAEzD,GAAMC,CAAAA,MAAM,CAAGP,SAAS,EAAxB,CAEA,QAASQ,CAAAA,cAAT,EAA0B,CACxB,GAAMC,CAAAA,UAAU,CAAG,GAAIR,CAAAA,UAAJ,EAAnB,CACAK,cAAc,CAACG,UAAU,CAACC,QAAX,CAAoBH,MAAM,CAACI,OAA3B,CAAD,CAAd,CACD,CAED,QAASC,CAAAA,GAAT,CAAaC,MAAb,CAAqB,CACnB,MAAO,OAAOA,CAAAA,MAAP,GAAkB,WAAlB,CACH,IADG,CAEH,OAASA,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAT,CAA6B,GAFjC,CAGD,CAED,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,OAA2B,IAAzBC,CAAAA,WAAyB,OAAzBA,WAAyB,CAAZZ,MAAY,OAAZA,MAAY,CAChD,MAAOY,CAAAA,WAAW,CACdA,WAAW,CAACC,GAAZ,CAAgB,SAACC,IAAD,CAAOC,CAAP,qBACd,0BACE,GAAG,CAAEA,CADP,CAEE,SAAS,CAAEf,MAAM,CAAG,yBAAH,CAA+B,UAFlD,EAIGc,IAJH,CADc,EAAhB,CADc,CASd,IATJ,CAUD,CAXD,CAaA,mBACE,2BAAK,SAAS,CAAEd,MAAM,CAAG,sBAAH,CAA4B,iBAAlD,eACE,2BAAK,KAAK,CAAE,CAACgB,UAAU,CAAER,GAAG,CAACP,WAAD,CAAhB,CAAZ,CAA4C,SAAS,CAAC,mBAAtD,eACE,2BAAK,SAAS,CAAC,wBAAf,EADF,cAEE,2BAAK,SAAS,CAAC,wBAAf,eACE,0BAAI,SAAS,CAAC,yBAAd,EAAyCF,QAAQ,CAACkB,OAAlD,CADF,CAFF,cAME,2BACE,WAAW,CAAE,WADf,CAEE,GAAG,CAAEd,MAFP,CAGE,SAAS,CAAC,uBAHZ,CAIE,GAAG,CAAEJ,QAAQ,CAACmB,WAJhB,CAKE,GAAG,CAAEnB,QAAQ,CAACkB,OALhB,CAME,MAAM,CAAE,wBAAMb,CAAAA,cAAc,EAApB,EANV,EANF,CADF,cAgBE,2BAAK,SAAS,CAAC,yBAAf,eACE,0BACE,SAAS,CACPJ,MAAM,CACF,qCADE,CAEF,sBAJR,EAOGD,QAAQ,CAACoB,IAPZ,CADF,cAUE,0BACE,SAAS,CACPnB,MAAM,CACF,qCADE,CAEF,sBAJR,EAOGD,QAAQ,CAACqB,IAPZ,CAVF,cAmBE,yBACE,SAAS,CACPpB,MAAM,CACF,8CADE,CAEF,+BAJR,EAOGD,QAAQ,CAACsB,IAPZ,CAnBF,cA4BE,2CACE,oBAAC,cAAD,EAAgB,WAAW,CAAEtB,QAAQ,CAACa,WAAtC,CAAmD,MAAM,CAAEZ,MAA3D,EADF,CA5BF,CAhBF,CADF,CAmDD","sourcesContent":["import React, {useState, createRef} from \"react\";\r\nimport \"./ExperienceCard.css\";\r\nimport ColorThief from \"colorthief\";\r\n\r\nexport default function ExperienceCard({cardInfo, isDark}) {\r\n  const [colorArrays, setColorArrays] = useState([]);\r\n  const imgRef = createRef();\r\n\r\n  function getColorArrays() {\r\n    const colorThief = new ColorThief();\r\n    setColorArrays(colorThief.getColor(imgRef.current));\r\n  }\r\n\r\n  function rgb(values) {\r\n    return typeof values === \"undefined\"\r\n      ? null\r\n      : \"rgb(\" + values.join(\", \") + \")\";\r\n  }\r\n\r\n  const GetDescBullets = ({descBullets, isDark}) => {\r\n    return descBullets\r\n      ? descBullets.map((item, i) => (\r\n          <li\r\n            key={i}\r\n            className={isDark ? \"subTitle dark-mode-text\" : \"subTitle\"}\r\n          >\r\n            {item}\r\n          </li>\r\n        ))\r\n      : null;\r\n  };\r\n\r\n  return (\r\n    <div className={isDark ? \"experience-card-dark\" : \"experience-card\"}>\r\n      <div style={{background: rgb(colorArrays)}} className=\"experience-banner\">\r\n        <div className=\"experience-blurred_div\"></div>\r\n        <div className=\"experience-div-company\">\r\n          <h5 className=\"experience-text-company\">{cardInfo.company}</h5>\r\n        </div>\r\n\r\n        <img\r\n          crossOrigin={\"anonymous\"}\r\n          ref={imgRef}\r\n          className=\"experience-roundedimg\"\r\n          src={cardInfo.companylogo}\r\n          alt={cardInfo.company}\r\n          onLoad={() => getColorArrays()}\r\n        />\r\n      </div>\r\n      <div className=\"experience-text-details\">\r\n        <h5\r\n          className={\r\n            isDark\r\n              ? \"experience-text-role dark-mode-text\"\r\n              : \"experience-text-role\"\r\n          }\r\n        >\r\n          {cardInfo.role}\r\n        </h5>\r\n        <h5\r\n          className={\r\n            isDark\r\n              ? \"experience-text-date dark-mode-text\"\r\n              : \"experience-text-date\"\r\n          }\r\n        >\r\n          {cardInfo.date}\r\n        </h5>\r\n        <p\r\n          className={\r\n            isDark\r\n              ? \"subTitle experience-text-desc dark-mode-text\"\r\n              : \"subTitle experience-text-desc\"\r\n          }\r\n        >\r\n          {cardInfo.desc}\r\n        </p>\r\n        <ul>\r\n          <GetDescBullets descBullets={cardInfo.descBullets} isDark={isDark} />\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}