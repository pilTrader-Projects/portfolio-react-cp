{"ast":null,"code":"import _taggedTemplateLiteral from\"D:\\\\Bong\\\\Documents\\\\Projects\\\\ReactJS\\\\Portfolio\\\\portfolio-react-cp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"D:\\\\Bong\\\\Documents\\\\Projects\\\\ReactJS\\\\Portfolio\\\\portfolio-react-cp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n        {\\n        user(login: \\\"\",\"\\\") {\\n          pinnedItems(first: 6, types: [REPOSITORY]) {\\n            totalCount\\n            edges {\\n              node {\\n                ... on Repository {\\n                  name\\n                  description\\n                  forkCount\\n                  stargazers {\\n                    totalCount\\n                  }\\n                  url\\n                  id\\n                  diskUsage\\n                  primaryLanguage {\\n                    name\\n                    color\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n        \"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect,useContext,Suspense,lazy}from\"react\";import ApolloClient from\"apollo-boost\";import{gql}from\"apollo-boost\";import\"./Project.css\";import Button from\"../../components/button/Button\";import{openSource,socialMediaLinks}from\"../../portfolio\";import StyleContext from\"../../contexts/StyleContext\";import Loading from\"../../containers/loading/Loading\";export default function Projects(){var GithubRepoCard=lazy(function(){return import(\"../../components/githubRepoCard/GithubRepoCard\");});var FailedLoading=function FailedLoading(){return null;};var renderLoader=function renderLoader(){return/*#__PURE__*/React.createElement(Loading,null);};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),repo=_useState2[0],setrepo=_useState2[1];// todo: remove useContex because is not supported\nvar _useContext=useContext(StyleContext),isDark=_useContext.isDark;useEffect(function(){getRepoData();},[]);function getRepoData(){var client=new ApolloClient({uri:\"https://api.github.com/graphql\",request:function request(operation){operation.setContext({headers:{authorization:\"Bearer \".concat(openSource.githubConvertedToken)}});}});client.query({query:gql(_templateObject(),openSource.githubUserName)}).then(function(result){setrepoFunction(result.data.user.pinnedItems.edges);console.log(result);}).catch(function(error){console.log(error);setrepoFunction(\"Error\");console.log(\"Because of this Error, nothing is shown in place of Projects section. Projects section not configured\");});}function setrepoFunction(array){setrepo(array);}if(!(typeof repo===\"string\"||repo instanceof String)&&openSource.display){return/*#__PURE__*/React.createElement(Suspense,{fallback:renderLoader()},/*#__PURE__*/React.createElement(\"div\",{className:\"main\",id:\"opensource\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"project-title\"},\"Open Source Projects\"),/*#__PURE__*/React.createElement(\"div\",{className:\"repo-cards-div-main\"},repo.map(function(v,i){return/*#__PURE__*/React.createElement(GithubRepoCard,{repo:v,key:v.node.id,isDark:isDark});})),/*#__PURE__*/React.createElement(Button,{text:\"More Projects\",className:\"project-button\",href:socialMediaLinks.github,newTab:true})));}else{return/*#__PURE__*/React.createElement(FailedLoading,null);}}","map":{"version":3,"sources":["D:/Bong/Documents/Projects/ReactJS/Portfolio/portfolio-react-cp/src/containers/projects/Projects.js"],"names":["React","useState","useEffect","useContext","Suspense","lazy","ApolloClient","gql","Button","openSource","socialMediaLinks","StyleContext","Loading","Projects","GithubRepoCard","FailedLoading","renderLoader","repo","setrepo","isDark","getRepoData","client","uri","request","operation","setContext","headers","authorization","githubConvertedToken","query","githubUserName","then","result","setrepoFunction","data","user","pinnedItems","edges","console","log","catch","error","array","String","display","map","v","i","node","id","github"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, Suspense, lazy} from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport {gql} from \"apollo-boost\";\r\nimport \"./Project.css\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {openSource, socialMediaLinks} from \"../../portfolio\";\r\nimport StyleContext from \"../../contexts/StyleContext\";\r\nimport Loading from \"../../containers/loading/Loading\";\r\nexport default function Projects() {\r\n  const GithubRepoCard = lazy(() =>\r\n    import(\"../../components/githubRepoCard/GithubRepoCard\")\r\n  );\r\n  const FailedLoading = () => null;\r\n  const renderLoader = () => <Loading />;\r\n  const [repo, setrepo] = useState([]);\r\n  // todo: remove useContex because is not supported\r\n  const {isDark} = useContext(StyleContext);\r\n  useEffect(() => {\r\n    getRepoData();\r\n  }, []);\r\n\r\n  function getRepoData() {\r\n    const client = new ApolloClient({\r\n      uri: \"https://api.github.com/graphql\",\r\n      request: operation => {\r\n        operation.setContext({\r\n          headers: {\r\n            authorization: `Bearer ${openSource.githubConvertedToken}`\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    client\r\n      .query({\r\n        query: gql`\r\n        {\r\n        user(login: \"${openSource.githubUserName}\") {\r\n          pinnedItems(first: 6, types: [REPOSITORY]) {\r\n            totalCount\r\n            edges {\r\n              node {\r\n                ... on Repository {\r\n                  name\r\n                  description\r\n                  forkCount\r\n                  stargazers {\r\n                    totalCount\r\n                  }\r\n                  url\r\n                  id\r\n                  diskUsage\r\n                  primaryLanguage {\r\n                    name\r\n                    color\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n        `\r\n      })\r\n      .then(result => {\r\n        setrepoFunction(result.data.user.pinnedItems.edges);\r\n        console.log(result);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        setrepoFunction(\"Error\");\r\n        console.log(\r\n          \"Because of this Error, nothing is shown in place of Projects section. Projects section not configured\"\r\n        );\r\n      });\r\n  }\r\n\r\n  function setrepoFunction(array) {\r\n    setrepo(array);\r\n  }\r\n  if (\r\n    !(typeof repo === \"string\" || repo instanceof String) &&\r\n    openSource.display\r\n  ) {\r\n    return (\r\n      <Suspense fallback={renderLoader()}>\r\n        <div className=\"main\" id=\"opensource\">\r\n          <h1 className=\"project-title\">Open Source Projects</h1>\r\n          <div className=\"repo-cards-div-main\">\r\n            {repo.map((v, i) => {\r\n              return (\r\n                <GithubRepoCard repo={v} key={v.node.id} isDark={isDark} />\r\n              );\r\n            })}\r\n          </div>\r\n          <Button\r\n            text={\"More Projects\"}\r\n            className=\"project-button\"\r\n            href={socialMediaLinks.github}\r\n            newTab={true}\r\n          />\r\n        </div>\r\n      </Suspense>\r\n    );\r\n  } else {\r\n    return <FailedLoading />;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}